# Generated by Django 5.1.1 on 2024-12-10 00:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nome do Produto')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, null=True, verbose_name='Preço')),
                ('desc', models.TextField(default='', verbose_name='Descrição')),
                ('size', models.CharField(choices=[('fixed', 'Tamanho único'), ('set', 'Definir valor')], default='', verbose_name='Tipo de tamanho')),
                ('term', models.IntegerField(blank=True, verbose_name='Prazo de produção')),
                ('stock', models.IntegerField(default=0, verbose_name='Estoque (0 para encomenda)')),
                ('slug', models.SlugField(blank=True)),
                ('numPhotos', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(blank=True, upload_to='products/')),
                ('label', models.CharField(blank=True, max_length=155)),
                ('product', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='products.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(to='products.tag'),
        ),
    ]
